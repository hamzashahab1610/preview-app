{"version":3,"sources":["utils/constants.js","components/App.js","components/Header.js","components/Iframe.js","components/FileViewer.js","components/FilesList.js","router/AppRouter.js","index.js"],"names":["API_URL","App","props","useState","file","setFile","setPreviewSrc","title","description","state","setState","errorMsg","setErrorMsg","setIsPreviewAvailable","dropRef","useRef","handleInputChange","event","target","name","value","updateBorder","dragState","current","style","border","handleOnSubmit","a","preventDefault","trim","formData","FormData","append","axios","post","headers","history","push","response","data","Fragment","Form","className","onSubmit","Row","Col","Group","controlId","Control","type","placeholder","onChange","onDrop","files","console","log","uploadedFile","fileReader","FileReader","onload","result","readAsDataURL","match","onDragEnter","onDragLeave","getRootProps","getInputProps","ref","Button","variant","Header","activeClassName","to","exact","Iframe","FileView","url","fileType","filePath","FilesList","filesList","setFilesList","fileResponse","setFileResponse","preview","setPreview","id","path","x","setx","search","setSearch","React","modalIsOpen","setIsOpen","useEffect","get","getFilesList","downloadFile","mimetype","responseType","split","filename","length","download","status","deleteFile","then","window","location","reload","previewFile","isOpen","onAfterOpen","onRequestClose","content","top","left","width","height","background","contentLabel","float","padding","onClick","undefined","includes","config","marginBottom","marginRight","fontWeight","paddingLeft","e","toLocaleLowerCase","map","_id","file_path","file_mimetype","toLowerCase","key","href","replace","substr","indexOf","colSpan","AppRouter","component","Modal","setAppElement","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a450168a.chunk.js","sourcesContent":["export const API_URL = \"https://react-preview-app.azurewebsites.net\";\r\n","import React, { useState, useRef } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport { API_URL } from \"../utils/constants\";\r\n\r\nconst App = (props) => {\r\n\tconst [file, setFile] = useState(null); // state for storing actual image\r\n\tconst [previewSrc, setPreviewSrc] = useState(\"\"); // state for storing previewImage\r\n\tconst [state, setState] = useState({\r\n\t\ttitle: \"\",\r\n\t\tdescription: \"\",\r\n\t});\r\n\tconst [errorMsg, setErrorMsg] = useState(\"\");\r\n\tconst [isPreviewAvailable, setIsPreviewAvailable] = useState(false); // state to show preview only for images\r\n\tconst dropRef = useRef(); // React ref for managing the hover state of droppable area\r\n\r\n\tconst handleInputChange = (event) => {\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst onDrop = (files) => {\r\n\t\tconsole.log(\"files\", files);\r\n\t\tconst [uploadedFile] = files;\r\n\t\tsetFile(uploadedFile);\r\n\r\n\t\tconst fileReader = new FileReader();\r\n\t\tfileReader.onload = () => {\r\n\t\t\tsetPreviewSrc(fileReader.result);\r\n\t\t};\r\n\t\tfileReader.readAsDataURL(uploadedFile);\r\n\t\tsetIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\r\n\t\tdropRef.current.style.border = \"2px dashed #e9ebeb\";\r\n\t};\r\n\r\n\tconst updateBorder = (dragState) => {\r\n\t\tif (dragState === \"over\") {\r\n\t\t\tdropRef.current.style.border = \"2px solid #000\";\r\n\t\t} else if (dragState === \"leave\") {\r\n\t\t\tdropRef.current.style.border = \"2px dashed #e9ebeb\";\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleOnSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\ttry {\r\n\t\t\tconst { title, description } = state;\r\n\t\t\tif (title.trim() !== \"\" && description.trim() !== \"\") {\r\n\t\t\t\tif (file) {\r\n\t\t\t\t\tconst formData = new FormData();\r\n\t\t\t\t\tformData.append(\"file\", file);\r\n\t\t\t\t\tformData.append(\"title\", title);\r\n\t\t\t\t\tformData.append(\"description\", description);\r\n\r\n\t\t\t\t\tsetErrorMsg(\"\");\r\n\t\t\t\t\tawait axios.post(`${API_URL}/upload`, formData, {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t\tprops.history.push(\"/list\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetErrorMsg(\"Please select a file to add.\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsetErrorMsg(\"Please enter all the field values.\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\terror.response && setErrorMsg(error.response.data);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Form className=\"search-form\" onSubmit={handleOnSubmit}>\r\n\t\t\t\t{errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Form.Group controlId=\"title\">\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\tvalue={state.title || \"\"}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter title\"\r\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Form.Group controlId=\"description\">\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\tvalue={state.description || \"\"}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter description\"\r\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<div className=\"upload-section\">\r\n\t\t\t\t\t<Dropzone\r\n\t\t\t\t\t\tonDrop={onDrop}\r\n\t\t\t\t\t\tonDragEnter={() => updateBorder(\"over\")}\r\n\t\t\t\t\t\tonDragLeave={() => updateBorder(\"leave\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{({ getRootProps, getInputProps }) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t{...getRootProps({ className: \"drop-zone\" })}\r\n\t\t\t\t\t\t\t\tref={dropRef}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<input {...getInputProps()} />\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tDrag and drop a file OR click here to select\r\n\t\t\t\t\t\t\t\t\ta file\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t{file && (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<strong>Selected file:</strong>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{file.name}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Dropzone>\r\n\t\t\t\t\t{/* {previewSrc ? (\r\n\t\t\t\t\t\tisPreviewAvailable ? (\r\n\t\t\t\t\t\t\t<div className=\"image-preview\">\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName=\"preview-image\"\r\n\t\t\t\t\t\t\t\t\tsrc={previewSrc}\r\n\t\t\t\t\t\t\t\t\talt=\"Preview\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"preview-message\">\r\n\t\t\t\t\t\t\t\t<p>No preview available for this file</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"preview-message\">\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tImage preview will be shown here after selection\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)} */}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<h1>File Upload And Download</h1>\r\n\t\t\t<nav>\r\n\t\t\t\t<NavLink activeClassName=\"active\" to=\"/\" exact={true}>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<NavLink activeClassName=\"active\" to=\"/list\">\r\n\t\t\t\t\tFiles List\r\n\t\t\t\t</NavLink>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Iframe({ url, setPreview }) {\r\n\treturn (\r\n\t\t<div className=\"iframe-container\">\r\n\t\t\t<div className=\"iframe\">\r\n\t\t\t\t<iframe\r\n\t\t\t\t\ttitle=\"iframe\"\r\n\t\t\t\t\tsrc={url}\r\n\t\t\t\t\tframeborder=\"0\"\r\n\t\t\t\t\twidth=\"700px\"\r\n\t\t\t\t\theight=\"800px\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Iframe;\r\n","import React from \"react\";\r\nimport FileViewer from \"react-file-viewer\";\r\n\r\nfunction FileView({ type, url }) {\r\n\treturn <FileViewer fileType={type} filePath={url} />;\r\n}\r\n\r\nexport default FileView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport download from \"downloadjs\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../utils/constants\";\r\nimport FilePreview from \"react-preview-file\";\r\nimport Iframe from \"./Iframe\";\r\nimport Modal from \"react-modal\";\r\nimport FileView from \"./FileViewer\";\r\n\r\nconst FilesList = () => {\r\n\tconst [filesList, setFilesList] = useState([]);\r\n\tconst [errorMsg, setErrorMsg] = useState(\"\");\r\n\tconst [fileResponse, setFileResponse] = useState();\r\n\tconst [preview, setPreview] = useState(false);\r\n\tconst [x, setx] = useState({ id: \"\", type: \"\", path: \"\" });\r\n\tconst [search, setSearch] = useState(\"\");\r\n\r\n\tvar subtitle;\r\n\tconst customStyles = {\r\n\t\tcontent: {\r\n\t\t\ttop: \"1%\",\r\n\t\t\tleft: \"3%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t\theight: \"95vh\",\r\n\t\t\t//transform: \"translate(-50%, -50%)\",\r\n\t\t\tbackground: \"white\",\r\n\t\t},\r\n\t};\r\n\r\n\tconst [modalIsOpen, setIsOpen] = React.useState(false);\r\n\tfunction openModal() {\r\n\t\tsetIsOpen(true);\r\n\t}\r\n\r\n\tfunction afterOpenModal() {\r\n\t\t// references are now sync'd and can be accessed.\r\n\t}\r\n\r\n\tfunction closeModal() {\r\n\t\tsetFileResponse();\r\n\t\tsetIsOpen(false);\r\n\t\tsetPreview(false);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getFilesList = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data } = await axios.get(`${API_URL}/getAllFiles`);\r\n\t\t\t\tconsole.log(\"data\", data);\r\n\t\t\t\tsetErrorMsg(\"\");\r\n\t\t\t\tsetFilesList(data);\r\n\t\t\t} catch (error) {\r\n\t\t\t\terror.response && setErrorMsg(error.response.data);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tgetFilesList();\r\n\t}, []);\r\n\r\n\tconst downloadFile = async (id, path, mimetype) => {\r\n\t\ttry {\r\n\t\t\tconst result = await axios.get(`${API_URL}/download/${id}`, {\r\n\t\t\t\tresponseType: \"blob\",\r\n\t\t\t});\r\n\t\t\tconst split = path.split(\"/\");\r\n\t\t\tconst filename = split[split.length - 1];\r\n\t\t\tsetErrorMsg(\"\");\r\n\t\t\treturn download(result.data, filename, mimetype);\r\n\t\t} catch (error) {\r\n\t\t\tif (error.response && error.response.status === 400) {\r\n\t\t\t\tsetErrorMsg(\"Error while downloading file. Try again later\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteFile = async (id) => {\r\n\t\ttry {\r\n\t\t\tawait axios.get(`${API_URL}/delete/${id}`).then(() => {\r\n\t\t\t\tif (typeof window !== \"undefined\") {\r\n\t\t\t\t\twindow.location.reload(true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tif (error.response && error.response.status === 400) {\r\n\t\t\t\tsetErrorMsg(\"Error while deleting file. Try again later\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// const toBase64 = (file, id) =>\r\n\t// \tnew Promise((resolve, reject) => {\r\n\t// \t\tconst reader = new FileReader();\r\n\t// \t\treader.readAsDataURL(file);\r\n\t// \t\treader.onload = () => {\r\n\t// \t\t\tconsole.log(reader.result);\r\n\t// \t\t\tconst x = reader.result;\r\n\t// \t\t\tconsole.log(\"x\", x);\r\n\t// \t\t\tconst y = new File([x], `${id}`);\r\n\t// \t\t\tconsole.log(\"y\", y);\r\n\t// \t\t\tfile = x;\r\n\t// \t\t\tsetFile(y);\r\n\t// \t\t\tconsole.log(\"file\", file);\r\n\t// \t\t\tresolve(reader.result);\r\n\t// \t\t};\r\n\t// \t\treader.onerror = (error) => reject(error);\r\n\t// \t});\r\n\r\n\tconst previewFile = async (id, path, mimetype) => {\r\n\t\tsetx({ id: id, path: path, type: mimetype });\r\n\t\tsetPreview(true);\r\n\t\ttry {\r\n\t\t\tconst result = await axios.get(`${API_URL}/download/${id}`, {\r\n\t\t\t\tresponseType: \"blob\",\r\n\t\t\t});\r\n\t\t\tsetFileResponse(result);\r\n\t\t} catch (error) {\r\n\t\t\tif (error.response && error.response.status === 400) {\r\n\t\t\t\tsetErrorMsg(\"Error while previewing file. Try again later\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst previewer = (type) => {\r\n\t\tif (type.includes(\"sheet\") || type.includes(\"excel\")) {\r\n\t\t\tconsole.log(\"excellll\");\r\n\t\t\treturn <FileView type={\"xlsx\"} url={fileResponse.config.url} />;\r\n\t\t} else if (type.includes(\"doc\")) {\r\n\t\t\tconsole.log(\"docccc\");\r\n\t\t\treturn <FileView type={\"docx\"} url={fileResponse.config.url} />;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"otherrrr\");\r\n\t\t\treturn (\r\n\t\t\t\t<object\r\n\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\tdata={fileResponse.config.url}\r\n\t\t\t\t>\r\n\t\t\t\t\t<param name=\"src\" value={fileResponse.config.url} />\r\n\t\t\t\t\t<param name=\"readonly\" value=\"false\" />\r\n\t\t\t\t</object>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log(\"search\", search);\r\n\tconsole.log(\"file response\", fileResponse);\r\n\tconsole.log(\"download file\", x);\r\n\r\n\treturn (\r\n\t\t<div className=\"files-container\">\r\n\t\t\t<Modal\r\n\t\t\t\tisOpen={modalIsOpen}\r\n\t\t\t\tonAfterOpen={afterOpenModal}\r\n\t\t\t\tonRequestClose={closeModal}\r\n\t\t\t\tstyle={customStyles}\r\n\t\t\t\tcontentLabel=\"Example Modal\"\r\n\t\t\t>\r\n\t\t\t\t<button\r\n\t\t\t\t\tstyle={{ float: \"right\", padding: \"0.5rem 1rem\" }}\r\n\t\t\t\t\tonClick={() => downloadFile(x.id, x.path, x.type)}\r\n\t\t\t\t>\r\n\t\t\t\t\tDownload\r\n\t\t\t\t</button>\r\n\t\t\t\t{preview && fileResponse !== undefined\r\n\t\t\t\t\t? previewer(fileResponse.data.type)\r\n\t\t\t\t\t: null}\r\n\t\t\t</Modal>\r\n\t\t\t<div style={{ marginBottom: \"1rem\" }}>\r\n\t\t\t\t<label style={{ marginRight: \"1rem\", fontWeight: \"bold\" }}>\r\n\t\t\t\t\tSearch\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tstyle={{ paddingLeft: \"0.5rem\" }}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\tsetSearch(e.target.value.toLocaleLowerCase())\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t{!preview ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n\t\t\t\t\t<table className=\"files-table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Title</th>\r\n\t\t\t\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t\t\t\t<th>File Name</th>\r\n\t\t\t\t\t\t\t\t<th>Delete File</th>\r\n\t\t\t\t\t\t\t\t<th>Download File</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{filesList.length > 0 ? (\r\n\t\t\t\t\t\t\t\tfilesList.map(\r\n\t\t\t\t\t\t\t\t\t({\r\n\t\t\t\t\t\t\t\t\t\t_id,\r\n\t\t\t\t\t\t\t\t\t\ttitle,\r\n\t\t\t\t\t\t\t\t\t\tdescription,\r\n\t\t\t\t\t\t\t\t\t\tfile_path,\r\n\t\t\t\t\t\t\t\t\t\tfile_mimetype,\r\n\t\t\t\t\t\t\t\t\t}) => {\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\ttitle.toLowerCase().search(search) >\r\n\t\t\t\t\t\t\t\t\t\t\t\t-1 ||\r\n\t\t\t\t\t\t\t\t\t\t\tdescription\r\n\t\t\t\t\t\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t\t\t\t\t\t.search(search) > -1 ||\r\n\t\t\t\t\t\t\t\t\t\t\tfile_path\r\n\t\t\t\t\t\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t\t\t\t\t\t.search(search) > -1\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={_id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"file-title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"file-description\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"#/\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\topenModal();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreviewFile(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile_path,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile_mimetype,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"file-title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{file_path.replace(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${file_path.substr(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile_path.indexOf(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"_\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) + 1,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"#/\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteFile(_id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"#/\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdownloadFile(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile_path,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile_mimetype,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDownload\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td\r\n\t\t\t\t\t\t\t\t\t\tcolSpan={5}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ fontWeight: \"300\" }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNo files found. Please add some.\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</>\r\n\t\t\t) : null}\r\n\r\n\t\t\t{/* {fileResponse !== undefined ? (\r\n\t\t\t\t<Iframe url={fileResponse.config.url} />\r\n\t\t\t) : (\r\n\t\t\t\t\"\"\r\n\t\t\t)} */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FilesList;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport App from '../components/App';\r\nimport Header from '../components/Header';\r\nimport FilesList from '../components/FilesList';\r\n\r\nconst AppRouter = () => (\r\n  <BrowserRouter>\r\n    <div className=\"container\">\r\n      <Header />\r\n      <div className=\"main-content\">\r\n        <Switch>\r\n          <Route component={App} path=\"/\" exact={true} />\r\n          <Route component={FilesList} path=\"/list\" />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"./router/AppRouter\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles.scss\";\r\nimport Modal from \"react-modal\";\r\n\r\nModal.setAppElement(\"body\");\r\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}